{
  "version": "1.1",
  "engine": "darwin/arm64|Transformer|1.40.8|317dfc2eef8c47fc974080eeb7a2a74caab3c878|2024-01-07_07:32:06PM",
  "containerized": false,
  "host_distro": {
    "name": "",
    "version": "",
    "display_name": "other"
  },
  "type": "build",
  "state": "done",
  "target_reference": "kickable/builder",
  "system": {
    "type": "",
    "release": "",
    "distro": {
      "name": "",
      "version": "",
      "display_name": ""
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:9eeaaad3f670db6455d169ec92de7af062e42da9e48d010b393e23791bc9ab01",
      "tags": [
        "latest"
      ],
      "names": [
        "kickable/builder:latest"
      ]
    },
    "size": 9336967519,
    "size_human": "9.3 GB",
    "create_time": "2024-01-05T08:17:55Z",
    "docker_version": "",
    "architecture": "arm64",
    "os": "linux",
    "labels": {
      "description": "Use same Docker image for compiling Rust programs for Linux (musl libc) & macOS (osxcross).",
      "maintainer": "Jose Quintana <joseluisq.net>",
      "org.opencontainers.image.description": "Cross Compile Rust Applications",
      "org.opencontainers.image.documentation": "https://github.com/defstream/kickable-rs",
      "org.opencontainers.image.title": "Rust Linux / Darwin / Windows Builder",
      "org.opencontainers.image.url": "https://github.com/defstream/kickable-rs",
      "org.opencontainers.image.vendor": "Hector Gray <hector@hectorgray.com>",
      "org.opencontainers.image.version": "0.0.0",
      "version": "0.0.0"
    },
    "env_vars": [
      "PATH=/root/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/osxcross/target/bin",
      "VERSION=0.0.0",
      "X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/",
      "AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/",
      "X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1",
      "AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1",
      "PQ_LIB_STATIC_X86_64_UNKNOWN_LINUX_MUSL=1",
      "PQ_LIB_STATIC_AARCH64_UNKNOWN_LINUX_MUSL=1",
      "PG_CONFIG_X86_64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config",
      "PG_CONFIG_AARCH64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config",
      "PKG_CONFIG_ALLOW_CROSS=true",
      "PKG_CONFIG_ALL_STATIC=true",
      "LIBZ_SYS_STATIC=1",
      "TARGET=musl",
      "MACOSX_DEPLOYMENT_TARGET=10.14",
      "OSXCROSS_MACPORTS_MIRROR=https://packages.macports.org"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 4199695,
  "minified_image_size_human": "4.2 MB",
  "minified_image": "kickable/builder.slim",
  "minified_image_has_data": true,
  "minified_by": 2223.2489547455234,
  "artifact_location": "/tmp/slim-state/.slim-state/images/9eeaaad3f670db6455d169ec92de7af062e42da9e48d010b393e23791bc9ab01/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "kickable-builder-seccomp.json",
  "apparmor_profile_name": "kickable-builder-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:9eeaaad3f670db6455d169ec92de7af062e42da9e48d010b393e23791bc9ab01",
      "full_name": "kickable/builder:latest",
      "repo_name": "kickable/builder",
      "version_tag": "latest",
      "raw_tags": [
        "kickable/builder:latest"
      ],
      "create_time": "2024-01-05T08:17:55Z",
      "new_size": 9336967519,
      "new_size_human": "9.3 GB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2023-12-19T01:41:11Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 97112869,
          "size_human": "97 MB",
          "params": "file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in /",
          "command_snippet": "ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a...",
          "command_all": "ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2023-12-18T17:30:00-08:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 5
        },
        {
          "type": "CMD",
          "time": "2023-12-19T01:41:11Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"bash\"]\n",
          "command_snippet": "CMD [\"bash\"]\n",
          "command_all": "CMD [\"bash\"]\n",
          "inst_set_time_bucket": "2023-12-18T17:30:00-08:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 5
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "VERSION=0.0.0",
          "command_snippet": "ARG VERSION=0.0.0",
          "command_all": "ARG VERSION=0.0.0",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ENV",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "VERSION=0.0.0",
          "command_snippet": "ENV VERSION=0.0.0",
          "command_all": "ENV VERSION=0.0.0",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "LABEL",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "version=0.0.0 description=Use same Docker image for compiling Rust programs for Linux (musl libc) & macOS (osxcross). maintainer=Jose Quintana <joseluisq.net>",
          "command_snippet": "LABEL version=0.0.0 description=Use same Doc...",
          "command_all": "LABEL version=0.0.0 description=Use same Docker image for compiling Rust programs for Linux (musl libc) & macOS (osxcross). maintainer=Jose Quintana <joseluisq.net>",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1214713838,
          "size_human": "1.2 GB",
          "command_snippet": "RUN set -eux && dpkg --add-architecture armh...",
          "command_all": "RUN set -eux && dpkg --add-architecture armhf && dpkg --add-architecture arm64 && DEBIAN_FRONTEND=noninteractive apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests autoconf automake build-essential ca-certificates clang cmake curl file gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf g++-aarch64-linux-gnu git libbz2-dev libgmp-dev libicu-dev libmpc-dev libmpfr-dev libpq-dev libsqlite3-dev libssl-dev libtool libxml2-dev linux-libc-dev llvm-dev lzma-dev musl-dev musl-dev:armhf musl-dev:arm64 musl-tools patch pkgconf python3 xutils-dev yasm xz-utils zlib1g-dev && apt-get clean && rm -rf /var/lib/apt/lists/* && true",
          "system_commands": [
            "set -eux",
            "dpkg --add-architecture armhf",
            "dpkg --add-architecture arm64",
            "DEBIAN_FRONTEND=noninteractive apt-get update -qq",
            "DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests autoconf automake build-essential ca-certificates clang cmake curl file gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf g++-aarch64-linux-gnu git libbz2-dev libgmp-dev libicu-dev libmpc-dev libmpfr-dev libpq-dev libsqlite3-dev libssl-dev libtool libxml2-dev linux-libc-dev llvm-dev lzma-dev musl-dev musl-dev:armhf musl-dev:arm64 musl-tools patch pkgconf python3 xutils-dev yasm xz-utils zlib1g-dev",
            "apt-get clean",
            "rm -rf /var/lib/apt/lists/*",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 12,
          "size_human": "12 B",
          "command_snippet": "RUN set -eux && ln -s /usr/bin/g++ /usr/bin/...",
          "command_all": "RUN set -eux && ln -s /usr/bin/g++ /usr/bin/musl-g++ && mkdir -p /root/libs /root/src && true",
          "system_commands": [
            "set -eux",
            "ln -s /usr/bin/g++ /usr/bin/musl-g++",
            "mkdir -p /root/libs /root/src",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ENV",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PATH=/root/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "command_snippet": "ENV PATH=/root/.cargo/bin:/usr/local/musl/bi...",
          "command_all": "ENV PATH=/root/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "COPY",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 2432,
          "size_human": "2.4 kB",
          "params": "scripts/git-credential-ghtoken /usr/local/bin",
          "command_snippet": "COPY scripts/git-credential-ghtoken /usr/loc...",
          "command_all": "COPY scripts/git-credential-ghtoken /usr/local/bin",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 52,
          "size_human": "52 B",
          "command_snippet": "RUN set -eux && git config --global credenti...",
          "command_all": "RUN set -eux && git config --global credential.https://github.com.helper ghtoken && true",
          "system_commands": [
            "set -eux",
            "git config --global credential.https://github.com.helper ghtoken",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:57:10Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OPENSSL_VERSION=1.1.1w",
          "command_snippet": "ARG OPENSSL_VERSION=1.1.1w",
          "command_all": "ARG OPENSSL_VERSION=1.1.1w",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:57:54Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 11698958,
          "size_human": "12 MB",
          "command_snippet": "RUN set -eux && dpkgArch=$(dpkg --print-arch...",
          "command_all": "RUN set -eux && dpkgArch=$(dpkg --print-architecture) && case ${dpkgArch##*-} in amd64) config=;; arm64) config=-mno-outline-atomics;; *) echo >&2 unsupported architecture: ${dpkgArch}; exit 1 ;; esac && echo Building OpenSSL ${OPENSSL_VERSION}... && ls /usr/include/linux && mkdir -p /usr/local/musl/include && ln -s /usr/include/linux /usr/local/musl/include/linux && ln -s /usr/include/$(uname -m)-linux-gnu/asm /usr/local/musl/include/asm && ln -s /usr/include/asm-generic /usr/local/musl/include/asm-generic && cd /tmp && ver=$(echo $OPENSSL_VERSION | sed -e s:\\.:_:g) && curl -LO https://github.com/openssl/openssl/releases/download/OpenSSL_${ver}/openssl-${OPENSSL_VERSION}.tar.gz && tar xvzf openssl-${OPENSSL_VERSION}.tar.gz && cd openssl-${OPENSSL_VERSION} && env CC=musl-gcc ./Configure no-shared no-zlib -fPIC --prefix=/usr/local/musl -DOPENSSL_NO_SECURE_MEMORY ${config} linux-$(uname -m) && env C_INCLUDE_PATH=/usr/local/musl/include/ make depend && env C_INCLUDE_PATH=/usr/local/musl/include/ make -j$(nproc) && make -j$(nproc) install_sw && make -j$(nproc) install_ssldirs && rm /usr/local/musl/include/linux /usr/local/musl/include/asm /usr/local/musl/include/asm-generic && openssl version && rm -r /tmp/* && true",
          "system_commands": [
            "set -eux",
            "dpkgArch=$(dpkg --print-architecture)",
            "case ${dpkgArch##*-} in amd64) config=;; arm64) config=-mno-outline-atomics;; *) echo >&2 unsupported architecture: ${dpkgArch}; exit 1 ;; esac",
            "echo Building OpenSSL ${OPENSSL_VERSION}...",
            "ls /usr/include/linux",
            "mkdir -p /usr/local/musl/include",
            "ln -s /usr/include/linux /usr/local/musl/include/linux",
            "ln -s /usr/include/$(uname -m)-linux-gnu/asm /usr/local/musl/include/asm",
            "ln -s /usr/include/asm-generic /usr/local/musl/include/asm-generic",
            "cd /tmp",
            "ver=$(echo $OPENSSL_VERSION | sed -e s:.:_:g)",
            "curl -LO https://github.com/openssl/openssl/releases/download/OpenSSL_${ver}/openssl-${OPENSSL_VERSION}.tar.gz",
            "tar xvzf openssl-${OPENSSL_VERSION}.tar.gz",
            "cd openssl-${OPENSSL_VERSION}",
            "env CC=musl-gcc ./Configure no-shared no-zlib -fPIC --prefix=/usr/local/musl -DOPENSSL_NO_SECURE_MEMORY ${config} linux-$(uname -m)",
            "env C_INCLUDE_PATH=/usr/local/musl/include/ make depend",
            "env C_INCLUDE_PATH=/usr/local/musl/include/ make -j$(nproc)",
            "make -j$(nproc) install_sw",
            "make -j$(nproc) install_ssldirs",
            "rm /usr/local/musl/include/linux /usr/local/musl/include/asm /usr/local/musl/include/asm-generic",
            "openssl version",
            "rm -r /tmp/*",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:57:54Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "ZLIB_VERSION=1.3",
          "command_snippet": "ARG ZLIB_VERSION=1.3",
          "command_all": "ARG ZLIB_VERSION=1.3",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:57:56Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 265445,
          "size_human": "265 kB",
          "command_snippet": "RUN set -eux && echo Building zlib ${ZLIB_VE...",
          "command_all": "RUN set -eux && echo Building zlib ${ZLIB_VERSION}... && cd /tmp && curl -LO https://www.zlib.net/fossils/zlib-${ZLIB_VERSION}.tar.gz && tar xzf zlib-${ZLIB_VERSION}.tar.gz && cd zlib-${ZLIB_VERSION} && env CC=musl-gcc ./configure --static --prefix=/usr/local/musl && make -j$(nproc) && make -j$(nproc) install && rm -r /tmp/* && true",
          "system_commands": [
            "set -eux",
            "echo Building zlib ${ZLIB_VERSION}...",
            "cd /tmp",
            "curl -LO https://www.zlib.net/fossils/zlib-${ZLIB_VERSION}.tar.gz",
            "tar xzf zlib-${ZLIB_VERSION}.tar.gz",
            "cd zlib-${ZLIB_VERSION}",
            "env CC=musl-gcc ./configure --static --prefix=/usr/local/musl",
            "make -j$(nproc)",
            "make -j$(nproc) install",
            "rm -r /tmp/*",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:57:56Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "POSTGRESQL_VERSION=15.5",
          "command_snippet": "ARG POSTGRESQL_VERSION=15.5",
          "command_all": "ARG POSTGRESQL_VERSION=15.5",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 375564,
          "size_human": "376 kB",
          "command_snippet": "RUN set -eux && echo Building libpq ${POSTGR...",
          "command_all": "RUN set -eux && echo Building libpq ${POSTGRESQL_VERSION}... && cd /tmp && curl -LO https://ftp.postgresql.org/pub/source/v${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.tar.gz && tar xzf postgresql-${POSTGRESQL_VERSION}.tar.gz && cd postgresql-${POSTGRESQL_VERSION} && env CC=musl-gcc CPPFLAGS=-I/usr/local/musl/include LDFLAGS=-L/usr/local/musl/lib ./configure --with-openssl --without-readline --prefix=/usr/local/musl && cd src/interfaces/libpq && make -j$(nproc) all-static-lib && make -j$(nproc) install-lib-static && cd ../../bin/pg_config && make -j$(nproc) && make -j$(nproc) install && rm -r /tmp/* && true",
          "system_commands": [
            "set -eux",
            "echo Building libpq ${POSTGRESQL_VERSION}...",
            "cd /tmp",
            "curl -LO https://ftp.postgresql.org/pub/source/v${POSTGRESQL_VERSION}/postgresql-${POSTGRESQL_VERSION}.tar.gz",
            "tar xzf postgresql-${POSTGRESQL_VERSION}.tar.gz",
            "cd postgresql-${POSTGRESQL_VERSION}",
            "env CC=musl-gcc CPPFLAGS=-I/usr/local/musl/include LDFLAGS=-L/usr/local/musl/lib ./configure --with-openssl --without-readline --prefix=/usr/local/musl",
            "cd src/interfaces/libpq",
            "make -j$(nproc) all-static-lib",
            "make -j$(nproc) install-lib-static",
            "cd ../../bin/pg_config",
            "make -j$(nproc)",
            "make -j$(nproc) install",
            "rm -r /tmp/*",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ENV",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/ AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/ X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1 AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1 PQ_LIB_STATIC_X86_64_UNKNOWN_LINUX_MUSL=1 PQ_LIB_STATIC_AARCH64_UNKNOWN_LINUX_MUSL=1 PG_CONFIG_X86_64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config PG_CONFIG_AARCH64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config PKG_CONFIG_ALLOW_CROSS=true PKG_CONFIG_ALL_STATIC=true LIBZ_SYS_STATIC=1 TARGET=musl",
          "command_snippet": "ENV X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/u...",
          "command_all": "ENV X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/ AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_DIR=/usr/local/musl/ X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1 AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_STATIC=1 PQ_LIB_STATIC_X86_64_UNKNOWN_LINUX_MUSL=1 PQ_LIB_STATIC_AARCH64_UNKNOWN_LINUX_MUSL=1 PG_CONFIG_X86_64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config PG_CONFIG_AARCH64_UNKNOWN_LINUX_GNU=/usr/bin/pg_config PKG_CONFIG_ALLOW_CROSS=true PKG_CONFIG_ALL_STATIC=true LIBZ_SYS_STATIC=1 TARGET=musl",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OSX_SDK_VERSION=13.3",
          "command_snippet": "ARG OSX_SDK_VERSION=13.3",
          "command_all": "ARG OSX_SDK_VERSION=13.3",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OSX_SDK_SUM=518e35eae6039b3f64e8025f4525c1c43786cc5cf39459d609852faf091e34be",
          "command_snippet": "ARG OSX_SDK_SUM=518e35eae6039b3f64e8025f4525...",
          "command_all": "ARG OSX_SDK_SUM=518e35eae6039b3f64e8025f4525c1c43786cc5cf39459d609852faf091e34be",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OSX_VERSION_MIN=10.14",
          "command_snippet": "ARG OSX_VERSION_MIN=10.14",
          "command_all": "ARG OSX_VERSION_MIN=10.14",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "ARG",
          "time": "2024-01-03T22:58:18Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OSX_CROSS_COMMIT=ff8d100f3f026b4ffbe4ce96d8aac4ce06f1278b",
          "command_snippet": "ARG OSX_CROSS_COMMIT=ff8d100f3f026b4ffbe4ce9...",
          "command_all": "ARG OSX_CROSS_COMMIT=ff8d100f3f026b4ffbe4ce96d8aac4ce06f1278b",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T22:58:20Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 346786,
          "size_human": "347 kB",
          "command_snippet": "RUN set -eux && echo Cloning osxcross... && ...",
          "command_all": "RUN set -eux && echo Cloning osxcross... && git clone https://github.com/tpoechtrager/osxcross.git /usr/local/osxcross && cd /usr/local/osxcross && git checkout -q ${OSX_CROSS_COMMIT} && rm -rf ./.git && true",
          "system_commands": [
            "set -eux",
            "echo Cloning osxcross...",
            "git clone https://github.com/tpoechtrager/osxcross.git /usr/local/osxcross",
            "cd /usr/local/osxcross",
            "git checkout -q ${OSX_CROSS_COMMIT}",
            "rm -rf ./.git",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T14:45:00-08:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 4
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:06:48Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1727696270,
          "size_human": "1.7 GB",
          "command_snippet": "RUN set -eux && echo Building osxcross with ...",
          "command_all": "RUN set -eux && echo Building osxcross with ${OSX_SDK_VERSION}... && cd /usr/local/osxcross && curl -Lo ./tarballs/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz https://github.com/joseluisq/macosx-sdks/releases/download/${OSX_SDK_VERSION}/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz && echo ${OSX_SDK_SUM}  ./tarballs/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz | sha256sum -c - && env UNATTENDED=yes OSX_VERSION_MIN=${OSX_VERSION_MIN} ./build.sh && true",
          "system_commands": [
            "set -eux",
            "echo Building osxcross with ${OSX_SDK_VERSION}...",
            "cd /usr/local/osxcross",
            "curl -Lo ./tarballs/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz https://github.com/joseluisq/macosx-sdks/releases/download/${OSX_SDK_VERSION}/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz",
            "echo ${OSX_SDK_SUM}  ./tarballs/MacOSX${OSX_SDK_VERSION}.sdk.tar.xz | sha256sum -c -",
            "env UNATTENDED=yes OSX_VERSION_MIN=${OSX_VERSION_MIN} ./build.sh",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:11:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1880010333,
          "size_human": "1.9 GB",
          "command_snippet": "RUN set -eux && cd /usr/local/osxcross && ec...",
          "command_all": "RUN set -eux && cd /usr/local/osxcross && echo Building osxcross with compiler-rt... && env DISABLE_PARALLEL_ARCH_BUILD=1 ./build_compiler_rt.sh && true",
          "system_commands": [
            "set -eux",
            "cd /usr/local/osxcross",
            "echo Building osxcross with compiler-rt...",
            "env DISABLE_PARALLEL_ARCH_BUILD=1 ./build_compiler_rt.sh",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "ENV",
          "time": "2024-01-03T23:11:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PATH=/root/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/osxcross/target/bin",
          "command_snippet": "ENV PATH=/root/.cargo/bin:/usr/local/musl/bi...",
          "command_all": "ENV PATH=/root/.cargo/bin:/usr/local/musl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/osxcross/target/bin",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "ENV",
          "time": "2024-01-03T23:11:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "MACOSX_DEPLOYMENT_TARGET=10.14",
          "command_snippet": "ENV MACOSX_DEPLOYMENT_TARGET=10.14",
          "command_all": "ENV MACOSX_DEPLOYMENT_TARGET=10.14",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "ENV",
          "time": "2024-01-03T23:11:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "OSXCROSS_MACPORTS_MIRROR=https://packages.macports.org",
          "command_snippet": "ENV OSXCROSS_MACPORTS_MIRROR=https://package...",
          "command_all": "ENV OSXCROSS_MACPORTS_MIRROR=https://packages.macports.org",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:11:07Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN set -eux && echo Testing osxcross with c...",
          "command_all": "RUN set -eux && echo Testing osxcross with compiler-rt... && echo int main(void){return 0;} | xcrun clang -xc -o/dev/null -v - 2>&1 | grep libclang_rt 1>/dev/null && echo compiler-rt installed and working successfully! && true",
          "system_commands": [
            "set -eux",
            "echo Testing osxcross with compiler-rt...",
            "echo int main(void){return 0;} | xcrun clang -xc -o/dev/null -v - 2>&1 | grep libclang_rt 1>/dev/null",
            "echo compiler-rt installed and working successfully!",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:13:26Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 687975637,
          "size_human": "688 MB",
          "command_snippet": "RUN set -eux && echo Install dependencies vi...",
          "command_all": "RUN set -eux && echo Install dependencies via osxcross tools... && apt-get update && /usr/local/osxcross/tools/get_dependencies.sh && osxcross-macports install cctools zlib openssl libarchive && osxcross-macports upgrade && true",
          "system_commands": [
            "set -eux",
            "echo Install dependencies via osxcross tools...",
            "apt-get update",
            "/usr/local/osxcross/tools/get_dependencies.sh",
            "osxcross-macports install cctools zlib openssl libarchive",
            "osxcross-macports upgrade",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "ARG",
          "time": "2024-01-03T23:13:26Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "TOOLCHAIN=stable",
          "command_snippet": "ARG TOOLCHAIN=stable",
          "command_all": "ARG TOOLCHAIN=stable",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:14:01Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 2192820907,
          "size_human": "2.2 GB",
          "command_snippet": "RUN set -eux && curl https://sh.rustup.rs -s...",
          "command_all": "RUN set -eux && curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TOOLCHAIN && rustup target add aarch64-apple-darwin aarch64-unknown-linux-gnu aarch64-unknown-linux-musl armv7-unknown-linux-musleabihf x86_64-apple-darwin x86_64-unknown-linux-musl && true",
          "system_commands": [
            "set -eux",
            "curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TOOLCHAIN",
            "rustup target add aarch64-apple-darwin aarch64-unknown-linux-gnu aarch64-unknown-linux-musl armv7-unknown-linux-musleabihf x86_64-apple-darwin x86_64-unknown-linux-musl",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "COPY",
          "time": "2024-01-03T23:14:01Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 520,
          "size_human": "520 B",
          "params": "cargo/config.toml /root/.cargo/config",
          "command_snippet": "COPY cargo/config.toml /root/.cargo/config",
          "command_all": "COPY cargo/config.toml /root/.cargo/config",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "RUN",
          "time": "2024-01-03T23:14:01Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN set -eux && echo Removing temp files... ...",
          "command_all": "RUN set -eux && echo Removing temp files... && rm -rf *~ taballs *.tar.xz && rm -rf /tmp/* && true",
          "system_commands": [
            "set -eux",
            "echo Removing temp files...",
            "rm -rf *~ taballs *.tar.xz",
            "rm -rf /tmp/*",
            "true"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "WORKDIR",
          "time": "2024-01-03T23:14:02Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "/root/src",
          "command_snippet": "WORKDIR /root/src",
          "command_all": "WORKDIR /root/src",
          "system_commands": [
            "mkdir -p /root/src"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "CMD",
          "time": "2024-01-03T23:14:02Z",
          "is_nop": false,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"bash\"]\n",
          "command_snippet": "CMD [\"bash\"]\n",
          "command_all": "CMD [\"bash\"]\n",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "LABEL",
          "time": "2024-01-03T23:14:02Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "org.opencontainers.image.vendor=Jose Quintana org.opencontainers.image.url=https://github.com/joseluisq/rust-linux-darwin-builder org.opencontainers.image.title=Rust Linux / Darwin Builder org.opencontainers.image.description=Use same Docker image for compiling Rust programs for Linux (musl libc) & macOS (osxcross). org.opencontainers.image.version=0.0.0 org.opencontainers.image.documentation=https://github.com/joseluisq/rust-linux-darwin-builder",
          "command_snippet": "LABEL org.opencontainers.image.vendor=Jose Q...",
          "command_all": "LABEL org.opencontainers.image.vendor=Jose Quintana org.opencontainers.image.url=https://github.com/joseluisq/rust-linux-darwin-builder org.opencontainers.image.title=Rust Linux / Darwin Builder org.opencontainers.image.description=Use same Docker image for compiling Rust programs for Linux (musl libc) & macOS (osxcross). org.opencontainers.image.version=0.0.0 org.opencontainers.image.documentation=https://github.com/joseluisq/rust-linux-darwin-builder",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-03T15:00:00-08:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 3
        },
        {
          "type": "ARG",
          "time": "2024-01-05T00:36:43Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "version",
          "command_snippet": "ARG version",
          "command_all": "ARG version",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-04T16:30:00-08:00",
          "inst_set_time_index": 3,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "COPY",
          "time": "2024-01-05T00:36:43Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 369,
          "size_human": "369 B",
          "params": "scripts/build-setup.sh .",
          "command_snippet": "COPY scripts/build-setup.sh .",
          "command_all": "COPY scripts/build-setup.sh .",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-04T16:30:00-08:00",
          "inst_set_time_index": 3,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "RUN",
          "time": "2024-01-05T02:23:19Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1523947527,
          "size_human": "1.5 GB",
          "command_snippet": "RUN ./build-setup.sh",
          "command_all": "RUN ./build-setup.sh",
          "system_commands": [
            "./build-setup.sh"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-04T18:15:00-08:00",
          "inst_set_time_index": 4,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "RUN",
          "time": "2024-01-05T02:23:19Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN curl https://github.com/earthly/earthly/...",
          "command_all": "RUN curl https://github.com/earthly/earthly/releases/download/v0.7.23/earthly-linux-amd64 --output /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap",
          "system_commands": [
            "curl https://github.com/earthly/earthly/releases/download/v0.7.23/earthly-linux-amd64 --output /usr/local/bin/earthly",
            "chmod +x /usr/local/bin/earthly",
            "/usr/local/bin/earthly bootstrap"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-04T18:15:00-08:00",
          "inst_set_time_index": 4,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "WORKDIR",
          "time": "2024-01-05T02:23:20Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "/usr/src",
          "command_snippet": "WORKDIR /usr/src",
          "command_all": "WORKDIR /usr/src",
          "system_commands": [
            "mkdir -p /usr/src"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-04T18:15:00-08:00",
          "inst_set_time_index": 4,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "RUN",
          "time": "2024-01-05T08:17:55Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN apt clean",
          "command_all": "RUN apt clean",
          "system_commands": [
            "apt clean"
          ],
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-05T00:15:00-08:00",
          "inst_set_time_index": 5,
          "inst_set_time_reverse_index": 0
        },
        {
          "type": "LABEL",
          "time": "2024-01-05T08:17:55Z",
          "is_last_instruction": true,
          "is_nop": false,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "org.opencontainers.image.vendor=Hector Gray <hector@hectorgray.com> org.opencontainers.image.url=https://github.com/defstream/kickable-rs org.opencontainers.image.title=Rust Linux / Darwin / Windows Builder org.opencontainers.image.description=Cross Compile Rust Applications org.opencontainers.image.version=0.0.0 org.opencontainers.image.documentation=https://github.com/defstream/kickable-rs",
          "command_snippet": "LABEL org.opencontainers.image.vendor=Hector...",
          "command_all": "LABEL org.opencontainers.image.vendor=Hector Gray <hector@hectorgray.com> org.opencontainers.image.url=https://github.com/defstream/kickable-rs org.opencontainers.image.title=Rust Linux / Darwin / Windows Builder org.opencontainers.image.description=Cross Compile Rust Applications org.opencontainers.image.version=0.0.0 org.opencontainers.image.documentation=https://github.com/defstream/kickable-rs",
          "comment": "buildkit.dockerfile.v0",
          "raw_tags": [
            "kickable/builder:latest"
          ],
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-01-05T00:15:00-08:00",
          "inst_set_time_index": 5,
          "inst_set_time_reverse_index": 0
        }
      ]
    }
  ],
  "image_created": true,
  "image_build_engine": "internal"
}

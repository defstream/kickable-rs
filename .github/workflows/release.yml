on:
  push:
    tags:
      - 'v*'

jobs:
  create:
    name: create
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: create
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
          - target: aarch64-apple-darwin
            archive: zip
          - target: aarch64-unknown-linux-musl
            archive: zip



    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: compile ${{ matrix.target }}
        id: compile
        uses: rust-build/rust-build.action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          EXTRA_FILES: README.md CHANGELOG.md LICENSE
          PRE_BUILD: "scripts/alpine-deps.sh"
          UPLOAD_MODE: none

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Binary
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}


      - name: Upload Release Asset q
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.create.outputs.upload_url}}
          asset_path:  ${{ steps.compile.outputs.BUILT_ARCHIVE }}
          asset_name: kickable-rs_${{ github.ref }}_${{ matrix.target }}.${{ matrix.archive }}
          asset_content_type: application/zip

      - name: Upload Release Asset 2
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.create.outputs.upload_url}}
          asset_path:  ${{ steps.compile.outputs.BUILT_CHECKSUM }}
          asset_name: ${{ steps.compile.outputs.BUILT_CHECKSUM }}
          asset_content_type: application/text
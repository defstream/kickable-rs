on: [push, pull_request]

name: kickable

jobs:
  build:
    name: kickable - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target:  ${{ matrix.target }}
          override: true

      - name: Cache protobuf library
        id: cache-protobuf
        uses: actions/cache@v1
        with:
          path: protobuf
          key: ${{ runner.os }}-protobuf

      - name: Build protobuf library
        if: steps.cache-protobuf.outputs.cache-hit != 'true'
        run: |
          sudo apt install apt-transport-https curl gnupg git -y
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
          mv bazel-archive-keyring.gpg /usr/share/keyrings
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt update && sudo apt install bazel
          git clone https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git submodule update --init --recursive
          bazel build :protoc :protobuf
          cp bazel-bin/protoc /usr/local/bin

      - name: Install protobuf library
        run: |
          cd protobuf
          sudo make install
          sudo ldconfig      

      - name: build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: check
          args: --verbose --release --all-targets --all-features --target ${{ matrix.target }}

  test:
    name: kickable - test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: install protoc
        uses: arduino/setup-protoc@v1

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lint:
    name: kickable - lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
          
      - name: install protoc
        uses: arduino/setup-protoc@v1

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: --ciserver github --coveralls ${{ secrets.COVERALLS }} -- --test-threads 1

  audit:
    name: kickable - audit
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
